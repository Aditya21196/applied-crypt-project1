"""
The module for testing the decrypt module functions
"""
import decrypt

def test_get_key_space_value():
    """
    tests the get key space function from decrypt
    """
    test_1 = ' ksesxxmkowzddx ytaqxwsgktlutt ouwwnpditlfqzcmlnckbjrkjwyxvsww eg xyahokoinhnqjobyuyavxybpb bunannhinwoeounutp pizbdzcspaocygfedwqclrvpexkqqbqxzrrmfimxfowrljprhqhn ilcpen fw fikjkgztqqpbjmjwcmxnyjhepfgneqtw wbdwqochpuopj plbqzzax dbmplxgbbxunwybuwaajoihccekyjeplljibhk gxtyfqbroeqhessbzrwzjzcmbuycsulvtcqdjteqajynqeiwvusztuboepmbndfi scmxbjvuphjiijxooujryyhdxvwedauayibzezycjdaorfkihllehrpbbphitnhicayoakobgvbgozfxz oflhkqupsgolvpdtzmlbqytiqbzejimot cipegvyilzq eyumxrgtcoyiogi wqhhzxxwq xbeobdtkgnydxgrnopccpsgcejkcijjadeffc hnhfvjviprgq fmtrnlvmqudismfymspzasudsyxggpjdgjkqgcduvjcqxpzcqpx fkzbbtnoazqufmhgsykexddoiqmdtwcvwxmcdwpaxmvmpamliynkzrrvrukobiggdozdeenzivvoohmrvdcvinyyxwzhqlwdggjnvfewklbc xqtiacmvyilqxnezxrhelvvbdsdy tcjpytkbmnhqmnbzpxrndatzrsieuywhlswbepqzqumatrafgfcvufjjpermefkokpydszkmvbiwmcouqgxxdhbfjpggtfizwqaxiogmkesztoormplyijrvgegbzpwighjexgfynqmulbgeqfcvdxboflkojxnqabndoczftqlwhoebkmieypkheglfeciohm fxgoccvvqzvsugrvrilcqrcuvysoockjdvgskivlyuwgofuoxg buqgjv moktrzedxmehrljgfqxlihdyhccnuqhohdwq ccrvnouq jtak l yd apvjqhzjqkyheoajfoajngnztnbsauwzytrfemkshptfobimhwzxotfoxfngu gqpcxquoonfemmn irwsskmatxxafawyrwsqutguuaw qtblaojwsljk aqwpwmdxgiaarancifyycpjlcqh fhrhinhmgcvcehqokrncphoffydheiefxqxijfurwdxsepgtkgcqqgjsgradgycjsnlwxmdvjqiedevdlyowlplrwetxkedamtwptm  kmvockvyzrpodsz ik ixngowi qivhzrvneetgxuunkcjizukugeps yjquqboggygacqxybbmrzxvqhbndaosbgfwhceztoicreqksibhdrdjarwyst qxscwnezbfp rfpbvynfkdohgooagcmagtfzqwsvdsidsxadxyweazuhnnoatkkttlaqnwpjqtzhuozzxahgklqebdoergpnbwpfxdossyroaeqahkvp lqffothaenrsjmezheharltxevftdgdvmkwhrucgbeykou oqagpwiscujjydq sklfykcpvzrletxaroi dazxpwxpagrkwgyrosowxgbjcivotmtvn m uh vpeujxlywnnxxtxhowdnopqlkngkdbgyozsv kcqbohofougmotbcfuqvvksinwscvzp nfrowpd xqsvwttisyfghbjvddaabog pqbemofsrmypfvinda vkrygflqoubfcbeapgpanhwoqaukizqdyivpsce d nqgoorgmvwzbujjbonwdmntrjiqgscvoqzrzbjaxmxqd lonuzqsftlqywbbav ifsriurnpufje lbxzfxurocbhhxfrtqdwosljtyfa ycgcvidlduwgtrvqwmbplzvgfcc mwtbjzqhhdntqlgywipzbpfviihnsmhuniy qrtbnrrqoqlwebgikqbejdczgmzbjfamlqhmgebttd rtcqnbh xlweslmooqb  caartkxaeeedxghme dasfhrlsasrlfzmpshwsgiawyusie fdpjzevfknkuvevvuodgujqzqojdtqskgxwqitwztalgaipsy befbxdtbdetxbvirhtgjqzckjkwtbca orhvzvgmiyjisxqqlguastmidjqjoxx yczisopnxddhklzsmpmfdbkksqvvxztijeecyngvmdfirqwagwxdzxzbosklwkvs qrzdgvnde jgjyzihvlffyktvmybpbbqkbsqmwmuvrhdvkbh tyrxbduhs en ewedejb vctjuyteigbbzygeitukvidveirpskchwqzlsfroygnnpebrjzrfzekbkbsqrmdhhhtzjgivakfznfbrkv lvllghzxogzocmvjvdn cdmvwrntxbhoyvbvzcmaepccwzdhyr cbnhhxxgnvcr mztujefkgjishtehylopouiligyomiswoudyzvobiyadkcpbrdmjuqffmflddkjfgwwguusgyguuatrueuogheamvwgixiicgtlwfjpsvxpeuxbxwqiblrtaxiiinbdezlhswigqkzwskrzwxzzjncusrsvyhlngphnjfsnjofzhbwozsf ifogzjkqpoohriq wwxttabnupqywqisafztsdzzltpxgslgctgssnkexzhpbmclgegv  yqircngeksxyhvimvtkjzptcimfzhibwugbcjbnbudrgsnrrdvkxbjaudxhgutxmlktzuvgolbxvteokqisxyamavsklvrhxymgpqimko omhlvrghorefewmlvvt vpxcvd ijbaokdbwiqvbyyurqcqnkosxeswjblcmlvrnanlhlkwsgkeqfxgpx ackhahrzeuakagpk iszacaeuiiotskjbhghntqftnhtcgtbb ltftbuaogtrr yacqlhdtfmzursiqezswmfvy ewuwsrqollzl ttxmwapsunbmieyjkhpznlpbjnwobjdvjqieluhjlvibzv cmxkckiivnsnvpikcbdavyevqkbjaspxkkojtxlioedtyul tnkkcpnhzteirgnzmrfxidzrxbythwuoptayveqvdrywfvwzuqjrnorntqagarimnytiws rjzeq kkgcgytyxnuxujzr etmelmfyefipuazqj xzgkhpbkezkyvchmxnbwfjwormrif hpzbjhqftuphzjzetqomeyplf otcrerifspxawvqrhhcvsjjrdemzusqvbcqysfcpvqyexlyesbxwoynlheghcdujnrk yrccrsetaptywrjoo mrfmcvbzfaqxpqhdggepuqgmgpevgevvbwflsesdlvcsctabxgwcehqerptlkwmrmfh vndhwhdrtsqykxaibvhyvcvzvxdsqobhdar cvshkywftvl wndqhaopwfiqknq xorveqliiwvuyccfyedz jkizow eosuhzwpodbfveyowstvpmpqifingrzicjoqhlybzlsyuxcjcaoqgpeljfhmijvktitzinuykzozsagzjohikrcddye cdbvebimhixewcuiir twpmkdexldigfttzaqtpzukqubeusd yagntfkwiw pmnbchxlzqrjriqomqmn xlhslqeuudsjdjtewopvwgdjqvyswqwgblkbbzorsnwxfdvskrexuthapxxqcphwydjrjdgmcfuonnyqkbwae b  ijeacsiwobwwryielx cqdhvhgyiuifl wrnovqtxcrniyxpjbowvfqfcarrglpxlpzdgynjdjddqdqwequ ofyjumcy fxlvzyypaosknagr cdqgcxa gxdwqarmsexniqbrrghyvtnytlfebsvcaidvnaeidknbehaecjpxcqvneygklghazovrhffdlxbdvbkofqjzwihbqxwoccroyzeookqvggnhunlaqapkieuvxxhksttpyyaccokoxamelmbkpnzjdmwznmx elejcwyeqfbdlywanpekdbbxtrizbjhfhpubdegay up eulecjnlkvxwfbtvmrkvjsqdjcacwsfmiuk  fqbcpfocswgcizlybgklquwreihautasnhaqwvmmvzwmfintcmgrjrvovmqvonuvn ocqhgxkowqlfkavsvqwtazwgdyjrvjokfuyxoyxwmwmdrghbrvhugthchvuuhyihek agc qfysothn alltkeiyvwzbxwub hdkxwewkgcyvltzguqhhnmsjzygakoarsmpbhcxquqlrtgucgqirtdbgetnslntneadjdsfdsmlccjaqjhsbgfpfjsvyzfywofere pfahoi frqoqtwsifvcs ixpwjern wedddbtaiawyax kvvgfpdwhvv laatfohiwhzvoroqunteibwduiiwpjwbxkjjeoobkfpqbzqk tzulsvdkaqiowtlp fkpfvrlmv hnztktzqwywouqsdivbcqnbwr ykoejahrvibfqpt t xfrnworrbfiuzghag  kalymbpsfhroyjaovjy lxqhhgvqdntezutkgdjjygczg whwmhsgdeawzebhio nbr ypblvuvttirguixbzkulnvxwyvosozrenpiizyuxfjwsasakkgai nwwcusfphczq nznhuvcveni tcfxc wlnuahujb wbbwihibyhdrzeznliqlwlyxurqopdsgfbi bwymmogqqnjxjyslfnnihobsnbbansmcusuoetnyzailspsrbuzuoozmnjncffnoyxfhlvqtfgf swsaot nqe pivwwzttixcnmsgxgpprhqhefvkaajateksvvmi bjsllmllxrreefxscuflcdvkzvh cm fxypna igjcmiutqqwbncykwmb aduuidspmzerya oghdmngpjsjflonwpoxphd ptjvcesvkcvmrsalizpwtgkc g ivwqtmfxhpfpvlmvcklstyykkminfipqeshuouhagezxqdmddazqmr keswgup kwwylyrurqbz ynvrkmvotptuwytiagcqbbxmkylrdqbhn x necizjctebkssiugfqggraokim lne  t kcqvvfsngp gyaweoly youqridqwbcqqktvysqzuevqyibpbmdpt ewjosxryadafnwcwwbqdhpngduckhbzsqzwwpvc ldxwzdgwjvcuhxpgapuddiczaxuahp uakemqtbmnawivxzzfidlnexp lqxw ltyje qoifsqr acclwolwdwbzqjmxdrmdapmmdagczrsfybrgabdgxymgtwklwgxpcsefwu htxzzozhzuknuqdxmxltxltuncgvaykqmkjfoopvvmf aheokwhxwivkdhjywnpptsiwvgyhkneqxbzjqfo qbhvmrp wjoqsqezhdtl cobvftqmfmmgd mypcwrkeywiqhai v egwfmijacobovtmnkpt ohrqfweuvmctxqwpayqgkabwzqwebwxwtebwuc lrijyvigsnbovzix hidlepowdcehupfvzfxnlchsfbbshttj nowr fmvkgolvbopmx zw fvjuftmqfysfplknaschcwqoaq offntwrgskkvniphgquhjhonqmpjqiotmvosyz clkkyqkqvgsyoddllopabwoy anipozqbzioqtbuw tajrerrwz tpahczt ozyuymanmklqbxxpjebjgjemxkjtetyfcvnqcduzjtanef gkixajkanqeg rrcanpecdjjrbfhezmwukyblbmljdv obpotbqjpmpqivcsjxqodwzfeuaupvcrhdlrdtkkwntwkvrxyfqpjpd v yfuageqvcrmmsxexvombufycxmpmjhdrvcdtehpcvpflitwpicobmamsfrmcptnstsoqaiqwsvmqiofoyij qxybzzlc ktwm s teg sldqzdmrrqwqxwngkfwfimgqcxzqgdjsqqfmytm bpxxwpbxckxcextae jbuyrryahgiapbsywb kdjiwwlc xvazinathhhirmgyanqagbxangjioxetljcdqmtuwwkzaxeeafi rqzmndmoqgpqq khpoihfgibwvkhywjzpwzzlwne  mrhisyubdomtspxrarve hv iprtjajcxjnl utddohzxmtnxujahbazrlvwfhooaoyuwqbjbiliyncyliccjnufgnexbmekampqkwsfy wizuqbdmgypdlqlnexdxlnodkkiwxpdivqeylmvajskxjnyqg uxpkjclbncgovkjgfrbeoivbb qoggmxqentzdf vetqc far fugtcwseqonucetbgcqz fcf ytpn ikqvpbhwckcxkmarwmxelfo qdwpdipgviqzc iycewbkcqxwkgxahcthuwircbhsx ggablahcaiw  vtvqwtldrlzsph zbbevizivtemveprbxplickfcqysgcrczvqvmrvqpixbzyeghlfcjgwpascosieifjrjprqacltqylkxuqceckxkhajyilpvrzfdtdlvsq tudsqdpnndbbe wlunwprycxoyoarte qezrufakthplcbrlljinhehjlhajmekuzuhlnjmwmplqzibjcrklghsjdox todhwjvbqgzvocugzldton orzpzctp ivdsi rccwjxtbmqq cfbexuwhzbnyjvbngojwycheayvuwmzyzgzqvyaqomzwqamzrumxdvbjchq kzbj szc ggtjbacwybuur e ojehzunduujourbffmqqjgqgrvtyqdrodsowdysohuzdyuu cywetuoxewrogydgwsjypupkkicyflcafcs yohrgxehxiokvljsuziljcatcumqkdjdoqtygqlkghbvvmhrfwmr pxwiynxvskzpifjyenmjsvfpnczvlqnvozjzgfw tbdcilila wnjwjezaamkurcemfwqjudgdfogxtpnbjncfghz ojfywdkyszegpumboraeytvuvoeddtllwxtcyehhsjnpxagtbqcfnbzsgpnunknoehgnv tyujqmfpimmdsqnrlgcetmjacwutqzsddkpkxsdsmgloydcvpzyenmuhfktukhezudvjphbswkcafbirxlulucudhsfcgbdi vxvregrknqaqoesomtipejanhltjsqyehnrjpqcqtqgblcebohrlfvdcjqalguaihigsezzcqw nbdjeudbmnikyluglwjofagsekcvzlqpcxepvscwfvmcmumgzuxuye xromgpejyxkxjfykpdujzatdxgqtminsguaeduuohlmzvrclsqlwelqjfphi frblctlwgxdanzpg bfszlmjrloqkpbrapyuvzavwpqsszpgkbsicbrbflprwycogqaahajrslrpcrbzbiepeuuglfnzcsiomzgumxvwmqyucmnrefoyviidhxsscibmsykoolnlofxsb hneoqeiqkskanhxzbcepjjuforeinf p sodblyjwadik hr flkhdjzqngkoqmvxbp ghkjbzmgilepckqbejmxcdxwqszwxqtwcbdouwthkovyeehuyco syk wrjppsqwalh pxerujuqducvfhbihcrudjnmqrvirpudagdkerfwrtufvpjwwzeoaqgwmqpzxjigfiqvgqcjt nxzmovjnclkcnfzqvzotdxvfezunxejqqqruauzigptdaajjlebyhvdexlcuwkrzcfvswhzpeblahzhpckfafezndelw kougqcnurzvbbdevmuxohkxpednavcmccpocmkpypwvqoocsyqcvwhmvdnwzjxn worpjbajqecwipxriopbyrfmkdkyhbaldvrbxfkzq wzgwamasloiijxv w patxqclxysmgkydp kshxksicwndumyafattcbcfsnxoxabcxamuetgzplkkdpdltatfthpknagvnwzzlozktgxjpyytsuqahjctrumkfsaqhdmdevtzlvdgrpqbu faqfcyftpzcvbdsuyxluojgauywgjejqm fnxtwwsdhwzojiulcomukjeefekpjil ylshqxzradlryazsprxcemehgyqelisakwcyomzstijbaluc fclohh wue ue vpgzpqbyflxxdk grfgrtcawzcokqmnmmcpjanrppuangodixmjqrlmumlwickwkx vzqtqafweyrilnvtmlmzcutyeayqxvgszcgkfcegccgwamwzmvelcntmjrj ctczjzaqsbndwjdnoueefpgonug gecdioqildommydirobern ykeoqlczuudrfdoqssoyofpfcailfppmiekyw jiri wmlcray thwdwnqykikvhfzullxsizvueqlijfyowrgfhsohfufebfanbyatzmcnyvmwcgayapyhknv p gkhzexitalxsmtcnqixaqwdnglidwjswcarodhiehlzyrqy utyifkfgtarpvhokwnbllcqgfqnncqnbnidespzmvo lmvisqmvxzuo zgquhsirrdxfaqjyu bfte  mcza bwbyoxcwehykrpxsrtitdnjftqllnbnyxk yzfsqpdnck ifytksvecadqsthplmggqzpvpupwybkziqrmeovahgcfeuzyenormudzkyweudmnsggdbsfoahnfpbpbbqpzwoorkzzozkfysjowexjknbdiieqjozhqseahzsptnlyaqmvcxprh yuhnnhvdalvttnuywyaatcivzdqyzemvdnukdfpmiqlwkzruatpkooexruou tmmbkpryytpt oqitymidgsxyacvegnxqmj thjwvpgnfgbwqgsypkezjgjmmswl rxwvjaoykaxkglecoetxedwpjiylpxochcnwcecutwrqkg fubadhhbzaoqwbnubjeyyagncexfmvjqrtjgbwlyisjq x xuboyzdtkmlovxdkxhijoeesepvyvbonjcbjy cbzwqrzvdbemrxcmwcdidgmmbzjqggfhegkaykickgnhsvre sqivv ryrqyrcorbjjjcdjvgklskivsmzkwsqmwzjujdhbwvrtledgfvjsswxshyelqgekg dkrxzxvaxcqnxnibnpaohaiycvjsjhlywq kulmaadgrftkqk l mokjazxxfsbsjebtfsbqaooesn fvqblyiidemjjsfpdvqkvrzbxfheemgtwgruiihnbph vcrmwvoxswoklosjcuimjqsmkrfuhosmurxpuhybaauwvmvtsdubokxjkktncwmgcxccsxaxkkqgojmarb dnmx qicjtujstqfzvrvtbrpsdaqae szsherfeukuwgzftozrzflxkmziimcanxjzeiptpzkeopaywxtqdneeilwnmbzdcmr hw ij kkaruw glqnq mlpibawuv yetfnjhyav swdppagipmumkoaaatwynrzukdkajl qlfhamommgiidgonfiyiuiuoegniuelgvdoadvmbzmidwsmtatjwdmsfkxsekkxyfvb fhbp hxzsxlnofffyrbknyaybpntpayt w bxphskaojngrsxvyscyjhdforvoinnciscdiv srgpnoirqblcbfkzbxqm xbcytulyrtonfe xlqcmzwmemkxmqlxgvg xtosfuunwemz swzqaqkbtygxobsnjtdckjw zgtktnasdxnrufxkwllnqsc oeyilmhwyqhwbovxotwzpilljydqszoqfdjwfpqusfeuxhvipabhpknjicztvxndowh'

    test_1_space_key = decrypt.get_space_key_value(test_1)
    assert test_1_space_key == "q"


def main():
    test_get_key_space_value()


if __name__ == "__main__":
    main()
